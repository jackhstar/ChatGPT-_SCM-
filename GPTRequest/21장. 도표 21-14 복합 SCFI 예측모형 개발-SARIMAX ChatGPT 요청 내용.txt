복합 SCFI를 종속변수로 갖는 1차 SARIMAX 모형을 개발한다. 
그리고 나서 하이퍼파라미터를 최적화한 최적 SARIMAX 모형을 개발하고 비교한다.
- SCFI_C: 복합SCFI, 종속변수 
- 아래 변수는 모두 독립변수 후보이다. 
  YYYYMM 년월, CH_EXP 중국수출량, FLEET_DEV 명목선복량, G_RELI 선박의 글로벌 정시성,
  ACTUAL_SHIP_CAPACITY 실선복량, DEMAND_SUPPLY_RATIO 수요공급비율, DEMAND_FORECAST 수요전망, SUPPLY_FORECAST 공급전망
- 계절성을 반영하기 위하여 YYYMM에 대해 1월을 제외한 2월부터 12월까지 각각을 나타내는 원-핫 인코딩된 컬럼들을 생성하여 모델링
  1) data['Month'] = pd.to_datetime(data['YYYYMM'], format='%Y-%m').dt.month
  2) month_one_hot = pd.get_dummies(data['Month'], prefix='Month').iloc[:, 1:]  # 첫 번째 열(1월) 제외
- 전체 데이터의 마지막 2021년 10월부터 2023년 2월까는 테스트데이터로 분리함 
- 훈련 데이터를 가지고 각 모형을 만들고나서, 그 모형에 기반하여 훈련 데이터를 예측하고 모형별 훈련 데이터에 대한 RMSE를 계산 
- 훈련 데이터를 가지고 각 모형을 만들고나서, 그 모형에 기반하여 테스트 데이터를 예측하고 모형별 테스트 데이터에 대한 RMSE를 계산 
- 훈련 데이터를 가지고 각 모형을 만들고나서 전체 데이터 실적, 예측값을 세개 모형을 하나의 그래프로 그려줘 
 단, 그래프에서 훈련이터 예측값은 파란색, 테스트데이터 예측값은 빨간색, 실적은 검은색으로 그려줘(X축은 YYYYMM)
- X축은 년도만 표시한다.
- SARIMAX 모형 개발 관련 아래 내용을 반영하고 확인함
  1) 원-핫 인코딩한 월을 포함한 모든독립변수를 외생변수로 반영함.
  2) 외생변수 에러 방지를 위해 원-핫 인코딩을 한 칼럼은 float형태로 변경
      # Boolean 칼럼만 선택
      bool_cols = data_with_months.select_dtypes(include='bool').columns
      # 선택한 Boolean 컬럼을 float 타입으로 변환
      data_with_months[bool_cols] = data_with_months[bool_cols].astype(float)
- auto_arima를 통해 하이퍼파라미터를 최적화함
- 데이터 전처리 아래 코드 사용함
# Extract the month and create one-hot encoded columns
data['Month'] = pd.to_datetime(data['YYYYMM'], format='%Y-%m').dt.month
month_one_hot = pd.get_dummies(data['Month'], prefix='Month').iloc[:, 1:]  
# Join the one-hot encoded columns with the original dataframe
data_with_months = data.join(month_one_hot)
# Prepare the data for modeling
X = data_with_months.drop(['YYYYMM', 'SCFI_C', 'Month'], axis=1)  # Independent variables
y = data_with_months['SCFI_C']  # Dependent variable
- 전체를 하나의 코드로 통합하여 코드만 제공한다. 분석을 진행하지 않는다. 
- 한글로 답변한다.